<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tsung SYSTEM "/home/jenkins/tsung/tsung-1.0.dtd">
<tsung loglevel="debug" >
   <clients>
      <client host="localhost" use_controller_vm="true" maxusers="200000" />
   </clients>
   <servers>
      <server host="speyside-ejabberd-test-1808990691.us-east-1.elb.amazonaws.com" port="5280" type="websocket" />
   </servers>
   <load duration="6" unit="minute">
      <arrivalphase phase="1" duration="1" unit="minute">
         <users arrivalrate="40" unit="second" />
      </arrivalphase>
      <arrivalphase phase="2" duration="5" unit="minute">
         <users arrivalrate="17" unit="second" />
      </arrivalphase>
   </load>
   <options>
      <option type="ts_jabber" name="userid_max" value="0" />
      <option type="ts_jabber" name="random_from_fileid" value='userdb'/>
      <option type="ts_jabber" name="offline_from_fileid" value='userdb'/>
      <option type="ts_jabber" name="fileid_delimiter" value=";"/>
      <option name="websocket_path" value="/websocket" />
      <option name="max_retries" value="5" />
      <option type="ts_jabber" name="global_number" value="1000000" />
      <option type="ts_jabber" name="domain" value="chat.staging.skillz.com" />
      <option type="ts_jabber" name="muc_service" value="conference.chat.staging.skillz.com" />
      <option name="file_server" id="userdb" value="/home/jenkins/workspace/TS/Gatling/TsungStagingtests/users.csv" />
   </options>
   <sessions>
      <session name="heavy-load" probability="10" type="ts_jabber">
         <setdynvars sourcetype="file" fileid="userdb" delimiter=";" order="iter">
            <var name="username" />
            <var name="password" />
         </setdynvars>
         <setdynvars sourcetype="random_string" length="20">
             <var name="resource_id" />
         </setdynvars>
         <request subst="true">
            <jabber type="connect" ack="no_ack">
               <xmpp_authenticate username="%%_username%%" passwd="%%_password%%" />
            </jabber>
         </request>
         <thinktime value="2" />
         <transaction name="authenticate">
            <request>
               <jabber type="auth_sasl" ack="local" />
            </request>
            <request>
               <jabber type="connect" ack="local" />
            </request>
            <request subst="true">
               <jabber type="auth_sasl_bind" ack="local" resource="%%_resource_id%%" />
            </request>
            <request>
               <jabber type="auth_sasl_session" ack="local" />
            </request>
         </transaction>
         <thinktime value="2" />
         <request>
            <jabber type="presence:initial" ack="no_ack" />
         </request>
         <setdynvars sourcetype="random_string" length="10">
            <var name="nick1" />
         </setdynvars>
         <transaction name="get_offline_message_count">
            <for from="0" to="4" incr="1" var="i">
               <request subst="true">
                   <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#info&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
               </request>
               <request subst="true">
                  <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#items&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
               </request>
               <thinktime value="5" />
            </for>
         </transaction>

         <thinktime value="20" random="false" />

         <!-- Disco info on room.  No ack. -->
         <!-- Raw, join room get 50 messages.  Ack. -->
         <transaction name="join_room">
            <request subst="true">
                <jabber type="raw" ack="local" data="&lt;iq  xmlns=&quot;jabber:client&quot; type=&quot;get&quot; to=&quot;81@conference.chat.staging.skillz.com&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;  &lt;query   xmlns=&quot;http://jabberd.org/protocol/disco#info&quot; /&gt;  &lt;/iq&gt;" />
            </request>
            <request subst="true">
                <jabber type="raw" ack="local" data="&lt;presence   xmlns=&quot;jabber:client&quot; to=&quot;81@conference.chat.staging.skillz.com/%%_nick1%%&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt; &lt;x xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt; &lt;history maxstanzas=&quot;50&quot; /&gt;   &lt;/x&gt;   &lt;c   xmlns=&quot;http://jabber.org/protocol/caps&quot; node=&quot;https://stanza.io&quot; hash=&quot;sha-1&quot; ver=&quot;4ArXvj+KpyleAhwHHCoKUPRQRto=Rto=&quot; /&gt;   &lt;/presence&gt;" />
            </request>
         </transaction>
         <!-- Send messages. -->
         <for from="1" to="40" incr="1" var="i">
            <transaction name="online_chat">
               <setdynvars sourcetype="random_string" length="40">
                  <var name="message_xml_id" />
               </setdynvars>
               <setdynvars sourcetype="random_string" length="20">
                  <var name="random_message" />
               </setdynvars>
               <request subst="true">
                   <!-- Skillz message format with randomized message and id. -->
                   <jabber type="raw" ack="no_ack" data="&lt;message xmlns=&quot;jabber:client&quot; to=&quot;81@conference.chat.staging.skillz.com&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot; type=&quot;groupchat&quot;&gt; &lt;body&gt;%%_random_message%%&lt;/body&gt; &lt;skillz_sdk xmlns=&quot;xmpp:skillz&quot;&gt; &lt;avatar_url&gt;https://cdn.staging.skillz.com/profile-pics/thumbnail/c11828ac-38b9-4b60-a701-8cd4d6d57c49&lt;/avatar_url&gt; &lt;flag_url&gt;https://cdn.staging.skillz.com/flags/US.png&lt;/flag_url&gt; &lt;user_id&gt;%%_username%%&lt;/user_id&gt; &lt;username&gt;%%_username%%&lt;/username&gt; &lt;user_role&gt;0&lt;/user_role&gt; &lt;user_mentions&gt;[]&lt;/user_mentions&gt; &lt;message_type&gt;0&lt;/message_type&gt; &lt;/skillz_sdk&gt; &lt;/message&gt;" />
               </request>
            </transaction>
            <thinktime value="10" random="true" />
         </for>
         <for from="0" to="7" incr="1" var="i">
            <transaction name="get_offline_messages">
               <request subst="true">
                  <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#info&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
               </request>
               <request subst="true">
                  <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#items&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
               </request>
               <thinktime value="5" />
            </transaction>
         </for>

         <thinktime value="3" random="false" />

         <for from="0" to="600" incr="1" var="i">
            <transaction name="keep_alive_while_disco">
              <request subst="true">
                 <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#info&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
              </request>
              <request subst="true">
                 <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#items&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
              </request>
              <thinktime value="2" />
           </transaction>
        </for>
      </session>
      <session name="light-load" probability="90" type="ts_jabber">
         <setdynvars sourcetype="file" fileid="userdb" delimiter=";" order="iter">
            <var name="username" />
            <var name="password" />
         </setdynvars>
         <setdynvars sourcetype="random_string" length="20">
             <var name="resource_id" />
         </setdynvars>
         <request subst="true">
            <jabber type="connect" ack="no_ack">
               <xmpp_authenticate username="%%_username%%" passwd="%%_password%%" />
            </jabber>
         </request>
         <thinktime value="2" />
         <transaction name="authenticate">
            <request>
               <jabber type="auth_sasl" ack="local" />
            </request>
            <request>
               <jabber type="connect" ack="local" />
            </request>
            <request subst="true">
               <jabber type="auth_sasl_bind" ack="local" resource="%%_resource_id%%" />
            </request>
            <request>
               <jabber type="auth_sasl_session" ack="local" />
            </request>
         </transaction>
         <thinktime value="2" />
         <request>
            <jabber type="presence:initial" ack="no_ack" />
         </request>
         <setdynvars sourcetype="random_string" length="10">
            <var name="nick1" />
         </setdynvars>
         <setdynvars sourcetype="random_number" start="1" end="100">
            <var name="room1" />
         </setdynvars>

         <!-- Disco info on room.  No ack. -->
         <!-- Raw, join room get 50 messages.  Ack. -->
         <transaction name="join_room">
            <request subst="true">
                <jabber type="raw" ack="local" data="&lt;iq  xmlns=&quot;jabber:client&quot; type=&quot;get&quot; to=&quot;%%_room1%%@conference.chat.staging.skillz.com&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;  &lt;query   xmlns=&quot;http://jabberd.org/protocol/disco#info&quot; /&gt;  &lt;/iq&gt;" />
            </request>
            <request subst="true">
                <jabber type="raw" ack="local" data="&lt;presence   xmlns=&quot;jabber:client&quot; to=&quot;%%_room1%%@conference.chat.staging.skillz.com/%%_nick1%%&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt; &lt;x xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt; &lt;history maxstanzas=&quot;50&quot; /&gt;   &lt;/x&gt;   &lt;c   xmlns=&quot;http://jabber.org/protocol/caps&quot; node=&quot;https://stanza.io&quot; hash=&quot;sha-1&quot; ver=&quot;4ArXvj+KpyleAhwHHCoKUPRQRto=Rto=&quot; /&gt;   &lt;/presence&gt;" />
            </request>
         </transaction>

         <!-- Send messages. -->
         <for from="1" to="40" incr="1" var="i">
            <transaction name="online_chat">
               <setdynvars sourcetype="random_string" length="40">
                  <var name="message_xml_id" />
               </setdynvars>
               <setdynvars sourcetype="random_string" length="20">
                  <var name="random_message" />
               </setdynvars>
               <request subst="true">
                   <!-- Skillz message format with randomized message and id. -->
                   <jabber type="raw" ack="no_ack" data="&lt;message xmlns=&quot;jabber:client&quot; to=&quot;%%_room1%%@conference.chat.staging.skillz.com&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot; type=&quot;groupchat&quot;&gt; &lt;body&gt;%%_random_message%%&lt;/body&gt; &lt;skillz_sdk xmlns=&quot;xmpp:skillz&quot;&gt; &lt;avatar_url&gt;https://cdn.staging.skillz.com/profile-pics/thumbnail/c11828ac-38b9-4b60-a701-8cd4d6d57c49&lt;/avatar_url&gt; &lt;flag_url&gt;https://cdn.staging.skillz.com/flags/US.png&lt;/flag_url&gt; &lt;user_id&gt;%%_username%%&lt;/user_id&gt; &lt;username&gt;%%_username%%&lt;/username&gt; &lt;user_role&gt;0&lt;/user_role&gt; &lt;user_mentions&gt;[]&lt;/user_mentions&gt; &lt;message_type&gt;0&lt;/message_type&gt; &lt;/skillz_sdk&gt; &lt;/message&gt;" />
               </request>
            </transaction>
            <thinktime value="10" random="true" />
         </for>

         <thinktime value="5" />

         <transaction name="get_offline_message_count">
            <request>
               <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;8494d366-45ee-413c-af4f-2ba069e7a41f&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#info&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
            </request>
         </transaction>
         <for from="0" to="600" incr="1" var="i">
            <transaction name="keep_alive_while_disco">
               <request subst="true">
                   <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#info&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
               </request>
                <request subst="true">
                   <jabber type="raw" ack="no_ack" data="&lt;iq   xmlns=&quot;jabber:client&quot; type=&quot;get&quot; id=&quot;%%ts_user_server:get_unique_id%%&quot;&gt;   &lt;query     xmlns=&quot;http://jabber.org/protocol/disco#items&quot; node=&quot;http://jabber.org/protocol/offline&quot;/&gt;   &lt;/iq&gt;" />
                 </request>
              <thinktime value="2" />
           </transaction>
        </for>
      </session>
   </sessions>
</tsung>
