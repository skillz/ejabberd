apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: chat-service
  labels:
    app: chat-service
spec:
  replicas: $(SVC_NUM_REPLICAS)
  serviceName: $(SVC_NAME_INTERNAL)
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      serviceAccountName: chat-service
      volumes:
      # Configuration files for the vault and consul-template agents
      - name: vault-config
        configMap:
          name: ejabberd-vault-config
      # Configuration files for the ejabberd process
      - name: ejabberd-config
        configMap:
          name: ejabberd-config
      # Stores the vault authentication token in RAM-backed tmpfs
      - name: vault-token
        emptyDir:
          medium: Memory
      # Stores files containing vault secrets rendered by consul-template
      - name: vault-secrets
        emptyDir: {}
      initContainers:
      # Vault agent manages authentication with vault on pod startup
      - name: vault-agent-auth
        image: vault:1.2.3 # Latest as of 2019-10-10
        volumeMounts:
        - name: vault-config
          mountPath: /etc/vault
        - name: vault-token
          mountPath: /home/vault
        env:
        - name: VAULT_ADDR
          value: http://vault.default:8200 # Vault is currently deployed in the default namespace
        args: [ "agent", "-config=/etc/vault/vault-agent-config.hcl" ]
      containers:
      # consul-template connects to vault and populates templates with the values of secrets
      - name: consul-template
        image: hashicorp/consul-template:0.22.0-alpine # Latest alpine as of 2019-10-10
        volumeMounts:
        - name: vault-token
          mountPath: /home/consul-template
        - name: vault-config
          mountPath: /etc/consul-template
        - name: vault-secrets
          mountPath: /etc/secrets
        env:
        - name: HOME
          value: /home/consul-template
        - name: VAULT_ADDR
          value: http://vault.default:8200 # Vault is currently deployed in the default namespace
        args: [ "-config=/etc/consul-template/consul-template-config.hcl" ]
      # ejabberd is the core chat-service process
      - name: ejabberd
        image: $(DOCKER_REPOSITORY):latest
        imagePullPolicy: Never
        env:
        - name: EJABBERD_POD_PREFIX
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: EJABBERD_INTERNAL_SVC
          value: $(SVC_NAME_INTERNAL)
        - name: EJABBERD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ERLANG_COOKIE
          value: DOYOULIKEIT
        - name: EJABBERD_K8S_AUTOCLUSTER
          value: 'true'
        - name: NUM_K8S_REPLICAS
          value: '$(NUM_REPLICAS) '
        - name: CHAT_SERVICE_USERS
          valueFrom:
            secretKeyRef:
              name: chat-service-users
              key: CHAT_SERVICE_USERS
        ports:
        - containerPort: 5280
          name: http
        - containerPort: 5269
          name: s2s-in
        - containerPort: 5222
          name: c2s
        - containerPort: 4369
          name: epmd
        resources: {}
        readinessProbe:
          tcpSocket:
            port: c2s
          initialDelaySeconds: 30
          timeoutSeconds: 1
        livenessProbe:
          tcpSocket:
            port: c2s
          initialDelaySeconds: 30
          timeoutSeconds: 1
        volumeMounts:
          # ejabberd-config volume mounts
          # Switch to using a projected volume (https://kubernetes.io/docs/concepts/storage/volumes/#projected) once the feature comes out of beta
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/inetrc
            subPath: inetrc
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/ejabberd.yaml
            subPath: ejabberd.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/log.yaml
            subPath: log.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/hosts.yaml
            subPath: hosts.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/listen.yaml
            subPath: listen.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/api-permissions.yaml
            subPath: api-permissions.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/access-rules.yaml
            subPath: access-rules.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/access-control-lists.yaml
            subPath: access-control-lists.yaml
          - name: ejabberd-config
            mountPath: /opt/chat-service/etc/ejabberd/modules.yaml
            subPath: modules.yaml
          # vault secrets volume mounts
          - name: vault-secrets
            mountPath: /opt/chat-service/secrets
        # An additional space is added to NUM_REPLICAS as otherwise kustomize turns this into an int, which kubernetes does not accept
        command: ["/opt/chat-service/scripts/run.sh", "${NUM_K8S_REPLICAS}"]
      terminationGracePeriodSeconds: 30
